[{"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\index.js":"1","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\App.js":"2","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\MenuComponent.js":"4","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\dishes.js":"5","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\MainComponent.js":"7","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\configureStore.js":"8","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\ContactComponent.js":"9","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\HeaderComponent.js":"10","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\FooterComponent.js":"11","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\AboutComponent.js":"12","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\HomeComponent.js":"13","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\comments.js":"14","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\leaders.js":"15","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\promotion.js":"16","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\leaders.js":"17","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\dishes.js":"18","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\comments.js":"19","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\promotions.js":"20","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\ActionTypes.js":"21","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\ActionCreators.js":"22","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\loadingComponent.js":"23","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\forms.js":"24","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\baseUrl.js":"25"},{"size":663,"mtime":1610499686607,"results":"26","hashOfConfig":"27"},{"size":510,"mtime":1610499686476,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":2323,"mtime":1610781906966,"results":"30","hashOfConfig":"27"},{"size":1490,"mtime":1610499686641,"results":"31","hashOfConfig":"27"},{"size":8718,"mtime":1610785056230,"results":"32","hashOfConfig":"27"},{"size":3121,"mtime":1610786283814,"results":"33","hashOfConfig":"27"},{"size":781,"mtime":1610718214692,"results":"34","hashOfConfig":"27"},{"size":10986,"mtime":1610784759745,"results":"35","hashOfConfig":"27"},{"size":5168,"mtime":1610512337745,"results":"36","hashOfConfig":"27"},{"size":2645,"mtime":1610499686560,"results":"37","hashOfConfig":"27"},{"size":4395,"mtime":1610499686491,"results":"38","hashOfConfig":"27"},{"size":1867,"mtime":1610786502529,"results":"39","hashOfConfig":"27"},{"size":4280,"mtime":1610499686628,"results":"40","hashOfConfig":"27"},{"size":2382,"mtime":1610499686643,"results":"41","hashOfConfig":"27"},{"size":445,"mtime":1610499686644,"results":"42","hashOfConfig":"27"},{"size":181,"mtime":1610610353567,"results":"43","hashOfConfig":"27"},{"size":629,"mtime":1610688043863,"results":"44","hashOfConfig":"27"},{"size":732,"mtime":1610778207624,"results":"45","hashOfConfig":"27"},{"size":650,"mtime":1610775478413,"results":"46","hashOfConfig":"27"},{"size":413,"mtime":1610773749113,"results":"47","hashOfConfig":"27"},{"size":3354,"mtime":1610806033855,"results":"48","hashOfConfig":"27"},{"size":251,"mtime":1610633005942,"results":"49","hashOfConfig":"27"},{"size":165,"mtime":1610717162556,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1610777491855,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1m87xxf",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\index.js",[],["107","108"],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\App.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\MenuComponent.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\dishes.js",[],["109","110"],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\DishdetailComponent.js",["111","112","113"],"import React, {Component} from 'react';\r\nimport {Card,CardBody,CardImg,CardTitle,CardText,Breadcrumb,BreadcrumbItem,Modal,ModalHeader,ModalBody,Label,Row,Col,Button} from 'reactstrap';\r\nimport { Control,LocalForm,Errors} from 'react-redux-form';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './loadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n\r\n\r\n\r\n    const required = (val) => val && val.length;\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n\r\n    class CommentForm extends Component {\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state={\r\n              \r\n                isModalOpen:false,\r\n                dishId: '',\r\n                addComment: ''\r\n\r\n            };\r\n\r\n      \r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n           \r\n        }\r\n\r\n       \r\n        toggleModal(){\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n\r\n        handleSubmit(values){\r\n           this.toggleModal();\r\n           this.props.addComment(this.props.dishId,values.rating, values.author, values.comment);\r\n    \r\n          \r\n        }\r\n\r\n\r\n\r\n        render() { \r\n            return ( <div>\r\n\r\n            <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil\" /> Submit Comment\r\n                    </Button>\r\n               <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit ={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor =\"rating\" md={12}>\r\n                                    Rating\r\n                                    </Label>\r\n                               <Col md={12}>\r\n                                    <Control.select\r\n                                    model=\".rating\"\r\n                                    name =\"name\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                    </Control.select>\r\n                               </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={12}>\r\n                                    Your Name\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                    <Control.text\r\n                                    model=\".author\"\r\n                                    name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,\r\n                                        minLength:minLength(2),\r\n                                        maxLength:maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                   <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required:\"Required \",\r\n                                            minLength:\"Must be more than 2 characters \",\r\n                                            maxLength: \"Must be 15 characters or less\"\r\n                                        }}\r\n                                    />\r\n                                   \r\n                                </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"comment\" md={12}>\r\n                                        Comment\r\n                                        </Label>\r\n                                        <Col md={12}>\r\n                                        <Control.textarea\r\n                                            model=\".comment\"\r\n                                            id=\"comment\"\r\n                                            name=\"comment\"\r\n                                            rows={5}\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                           </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n               \r\n               \r\n                \r\n                \r\n            </div> );\r\n        }\r\n    }\r\n     \r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   function RenderDish({dish}){\r\n    \r\n         return(\r\n            <div className=\"col-12 col-md-5 mt-1\">\r\n              <Card>\r\n                   <CardImg top width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                  <CardBody>\r\n                  <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                  </CardBody>\r\n              </Card>\r\n            </div>\r\n            \r\n          ); \r\n      }\r\n     \r\n    \r\n\r\n    function RenderComment({comments ,addComment,dishId}){\r\n        if(comments != null){\r\n            return(\r\n         \r\n                <div className=\"col-12 col-md-5 mt-1\"> \r\n                {<h4>Comments</h4>}  \r\n                <ul className=\"list-unstyled\">\r\n                    {comments.map((c) => {\r\n                          return (\r\n                              <li key={c.id}>\r\n                                 \r\n                                <p> {c.comment}</p>\r\n                                <p>-- {c.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(c.date)))}</p>\r\n                              </li>\r\n                         );\r\n                    }) }\r\n                    </ul> \r\n                    <CommentForm dishId={dishId} addComment={addComment} />\r\n              </div>\r\n      \r\n            );\r\n        }\r\n        else{\r\n            return(\r\n              <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n  \r\n    const DishDetail = (props) => { \r\n        if (props.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.errMess){\r\n            return(\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <h4>{props.errMess}</h4>\r\n            </div>\r\n        </div>\r\n        );\r\n        }\r\n       else if(props.dish != null){\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                 <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                    </div>\r\n                <div className= \"row\">\r\n                <RenderDish dish ={props.dish} />\r\n                \r\n                <RenderComment\r\n                 comments={props.comments}               \r\n                 dishId = {props.dish.id}\r\n                 addComment = {props.addComment}\r\n                 />\r\n                   \r\n                </div>\r\n          \r\n            </div>\r\n            \r\n         );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n \r\nexport default DishDetail;","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\MainComponent.js",["114","115"],"import { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport {Switch, Route,Redirect, withRouter} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport {addComment,fetchDishes,fetchComments,fetchPromos } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    dishes:state.dishes,\r\n    comments:state.comments,\r\n    promotions:state.promotions,\r\n    leaders:state.leaders\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addComment: (dishId ,rating, author , comment) => dispatch(addComment(dishId ,rating, author , comment)),\r\n  fetchDishes:() => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n  fetchComments:() => {dispatch(fetchComments())},\r\n  fetchPromos:() => {dispatch(fetchPromos())},\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    \r\n  }\r\n   \r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n  }\r\n\r\n  render(){\r\n\r\n   const Homepage = () => {\r\n     return (\r\n      <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading = {this.props.dishes.isLoading}\r\n            dishesErrMess = {this.props.dishes.errMess}\r\n            promotions = {this.props.promotions.promotions.filter((promo)=> promo.featured)[0]}\r\n            promoLoading = {this.props.promotions.isLoading}\r\n            promoErrMess = {this.props.promotions.errMess}\r\n            leader = {this.props.leaders.filter((lead) => lead.featured)[0]}\r\n           \r\n      />\r\n     );\r\n   \r\n   } \r\n \r\n   const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n        isLoading = {this.props.dishes.isLoading}\r\n        errMess = {this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        errMess = {this.props.comments.errMess}\r\n        addComment = {this.props.addComment}\r\n        />\r\n   \r\n      );\r\n   \r\n   }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/home\" component={Homepage} />\r\n        <Route exact path =\"/aboutus\" component={() => <About leaders={this.props.leaders}/>}/>\r\n        <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}/>}/>\r\n      <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n       <Route exact path =\"/contactus\" component={() => <Contact resetFeedbackForm = {this.props.resetFeedbackForm}/>}/>\r\n        <Redirect to=\"/home\"/>\r\n      </Switch>\r\n     <Footer />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default withRouter(connect(mapStatetoProps,mapDispatchToProps)(Main));\r\n","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\configureStore.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\ContactComponent.js",["116","117","118","119","120","121","122","123"],"import React, {Component} from 'react';\r\nimport { Breadcrumb,BreadcrumbItem, Button,Label,Col,Row } from \"reactstrap\";\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required =(val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+=]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n     \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n       \r\n    }\r\n\r\n\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current State is:\"+ JSON.stringify(values) );\r\n        alert(\"Current State is:\"+ JSON.stringify(values))\r\n        this.props.resetFeedbackForm()\r\n     \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n       \r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className= \"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}> \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id= \"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\" \r\n                                    className=\"form-control\"\r\n                                    validators = {{\r\n                                        required, minLength: minLength(3), maxLength:maxLength(15)\r\n                                    }}\r\n                                    \r\n                                 />\r\n                                 <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required:'Required ', \r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: ' Must be 15 characters or less'\r\n                                    }}\r\n                                 />\r\n                                   \r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id= \"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,minLength:minLength(3),maxLength:maxLength(15)\r\n                                    }}\r\n                                   />\r\n                                   <Errors \r\n                                   className=\"text-danger\"\r\n                                   model=\".lastname\"\r\n                                   show=\"touched\"\r\n                                   messages = {{\r\n                                       required:\"Required \",\r\n                                       minLength:\"Must be Greater than 2 characters\",\r\n                                       maxLength:\"Must be 15 characters or less\"\r\n                                   \r\n                                    }}\r\n                                   />\r\n                             \r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id= \"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,minLength:minLength(3),maxLength:maxLength(15), isNumber\r\n                                    }}\r\n                                     />\r\n                                     <Errors \r\n                                   className=\"text-danger\"\r\n                                   model=\".telnum\"\r\n                                   show=\"touched\"\r\n                                   messages = {{\r\n                                       required:\"Required \",\r\n                                       minLength:\"Must be Greater than 2 numbers\",\r\n                                       maxLength:\"Must be 15 numbers or less\",\r\n                                       isNumber:\"Must be Number\"\r\n                                    \r\n                                    }}\r\n                                   />\r\n                              \r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id= \"email\" name=\"email\"\r\n                                    placeholder=\"Email\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,validEmail\r\n                                    }}\r\n                                     />\r\n                                    <Errors \r\n                                   className=\"text-danger\"\r\n                                   model=\".email\"\r\n                                   show=\"touched\"\r\n                                   messages = {{\r\n                                       required:\"Required \",\r\n                                       validEmail:\"Please input valid email\"\r\n                                    \r\n                                    }}\r\n                                   />\r\n\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                               <Col md={{size:6,offset:2}}>\r\n\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                        className=\"form-check-input\"\r\n                                         /> {' '}\r\n                                        <strong>May we Contact you?</strong>\r\n                                    </Label>\r\n                                </div>\r\n                                </Col>\r\n                               <Col md={{size:3,offset:1}}>\r\n                                        <Control.select model=\".contactType\" name=\"contactType\"\r\n                                           className=\"form-control\">\r\n                                            <option>Tel.</option>\r\n                                            <option>Email</option>\r\n                                            </Control.select>\r\n                                            </Col>\r\n                                 </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id= \"message\" name=\"message\"\r\n                                    rows=\"12\"    \r\n                                    className=\"form-control\" />\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type =\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Contact;","C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\HeaderComponent.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\FooterComponent.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\AboutComponent.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\HomeComponent.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\comments.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\leaders.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\promotion.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\leaders.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\dishes.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\comments.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\promotions.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\ActionTypes.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\ActionCreators.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\components\\loadingComponent.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\redux\\forms.js",[],"C:\\Users\\PC-6\\Desktop\\reactV2\\my-app\\src\\shared\\baseUrl.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":65,"column":37,"nodeType":"132","endLine":68,"endColumn":62},{"ruleId":"130","severity":1,"message":"133","line":82,"column":37,"nodeType":"132","endLine":92,"endColumn":39},{"ruleId":"130","severity":1,"message":"134","line":111,"column":41,"nodeType":"132","endLine":117,"endColumn":43},{"ruleId":"135","severity":1,"message":"136","line":34,"column":3,"nodeType":"137","messageId":"138","endLine":37,"endColumn":4},{"ruleId":"139","severity":1,"message":"140","line":68,"column":9,"nodeType":"141","endLine":68,"endColumn":48},{"ruleId":"142","severity":1,"message":"143","line":72,"column":29,"nodeType":"132","endLine":72,"endColumn":71},{"ruleId":"130","severity":1,"message":"133","line":86,"column":37,"nodeType":"132","endLine":93,"endColumn":36},{"ruleId":"130","severity":1,"message":"133","line":110,"column":37,"nodeType":"132","endLine":116,"endColumn":38},{"ruleId":"130","severity":1,"message":"133","line":134,"column":37,"nodeType":"132","endLine":140,"endColumn":40},{"ruleId":"130","severity":1,"message":"133","line":159,"column":37,"nodeType":"132","endLine":165,"endColumn":40},{"ruleId":"130","severity":1,"message":"144","line":184,"column":41,"nodeType":"132","endLine":186,"endColumn":44},{"ruleId":"130","severity":1,"message":"131","line":192,"column":41,"nodeType":"132","endLine":193,"endColumn":69},{"ruleId":"130","severity":1,"message":"134","line":202,"column":37,"nodeType":"132","endLine":204,"endColumn":64},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]